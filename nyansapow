#!/usr/bin/env php
<?php
error_reporting(E_ALL ^ E_NOTICE);

require "lib/Nyansapow.php";
require "lib/clearice/ClearICE.php";

ClearICE::addOptions(
    array(
        'short' => 'i',
        'long' => 'input',
        'has_value' => true,
        'help' => "specifies where the input files for the wiki are found."
    ),
    array(
        'short' => 'o',
        'long' => 'output',
        'has_value' => true,
        "help" => "specifies where the wiki should be written to"
    ),
    array(
        'short' => 't',
        'long' => 'title',
        'has_value' => true,
        'help' => 'set the title for the entire wiki.This title would be shown in the header section.'
    ),
    array(
        'short' => 's',
        'long' => 'setup-git-hooks',
        'help' => 'setup the nyansapow git hooks in a bare git repository'
    ),
    array(
        'short' => 'u',
        'long' => 'update-git-hooks',
        'help' => 'update the nyansapow git hooks in a bare git repository'
    ),
    array(
        'short' => 'r',
        'long'  => 'git-repo',
        'has_value' => true,
        'help'  => 'specify the location of the git repository'
    )
);

ClearICE::addHelp();
ClearICE::setStrict(true);

$description = <<<EOT
nyansapo wiki generator
James Ekow Abaka Ainooson <jainooson@gmail.com>
        
A simple wiki generator engine to be used for the running of a git backed
wiki. Takes an input of a structured folder and outputs a static web page.


EOT;

ClearICE::setDescription($description);
$options = ClearICE::parse();
$home = __DIR__;

if(isset($options['setup-git-hooks']))
{
    if(is_writable('hooks') && is_dir('hooks'))
    {        

        $config = <<<EOT
<?php
\$output_directory = "{$options['output']}";
\$name = "{$options['title']}";
\$nyansapow_home = "$home";
EOT;

        copy("$home/git_hooks/post-receive", 'hooks/post-receive');
        copy("$home/git_hooks/pre-receive", 'hooks/pre-receive');
        file_put_contents('hooks/nyansapow.conf.php', $config);
        chmod('hooks/post-receive', 0755);
        chmod('hooks/pre-receive', 0755);
        mkdir('nyansapow_wiki');
    }
    else
    {
        fputs(STDERR, "Please ensure that this is a valid Git repository\n");
    }
    die();
}
else if(isset($options['update-git-hooks']))
{
    @unlink('hooks/post-receive');
    @unlink('hooks/pre-receive');
    copy("$home/git_hooks/post-receive", 'hooks/post-receive');
    chmod('hooks/post-receive', 0755);    
    copy("$home/git_hooks/pre-receive", 'hooks/pre-receive');
    chmod('hooks/pre-receive', 0755);    
    die();
}

try
{
    $nyansapow = Nyansapow::open($options['input'], $options['output'], $options);
    $nyansapow->write();
}
catch(NyansapowException $e)
{
    fputs(STDERR, wordwrap("{$e->getMessage()}\nTry `{$argv[0]} --help` for more information.\n"));
}

