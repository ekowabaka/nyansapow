#!/usr/bin/env php
<?php

use nyansapow\Nyansapow;

error_reporting(E_ALL ^ E_NOTICE);

require "vendor/autoload.php";

ClearIce::addOptions(
    array(
        'short' => 'i',
        'long' => 'input',
        'has_value' => true,
        'help' => "specifies where the input files for the site are found."
    ),
    array(
        'short' => 'o',
        'long' => 'output',
        'has_value' => true,
        "help" => "specifies where the site should be written to"
    ),
    array(
        'short' => 'n',
        'long' => 'site-name',
        'has_value' => true,
        'help' => 'set the name for the entire site'
    ),
    array(
        'short' => 'g',
        'long' => 'init-git-hooks',
        'help' => 'setup the nyansapow git hooks in a bare git repository'
    ),
    array(
        'short' => 'u',
        'long' => 'update-git-hooks',
        'help' => 'update the nyansapow git hooks in a bare git repository'
    ),
    array(
        'short' => 'r',
        'long'  => 'git-repo',
        'has_value' => true,
        'help'  => 'specify the location of the git repository'
    )
);

ClearIce::addHelp();
ClearIce::setStrict(true);

$description = <<<EOT
nyansapow site generator
James Ekow Abaka Ainooson <jainooson@gmail.com>
        
A simple static site generator engine to be used for generating static 
wikis, blogs and any kind of site you can think of the running of. It
also provides utility scripts to help you use git as the backend of
for updating your site.


EOT;

ClearIce::setDescription($description);
$options = ClearIce::parse();
$home = __DIR__;

if(isset($options['init-git-hooks']))
{
    if($options['output'] == '')
    {
        fputs(STDERR, "Please specify an output location for your site using the `--output` option.\n");
        die();
    }
    
    if(is_writable('hooks') && is_dir('hooks'))
    {        

        $config = <<<EOT
<?php
\$output_directory = "{$options['output']}";
\$name = "{$options['title']}";
\$nyansapow_home = "$home";
EOT;

        copy("$home/git_hooks/post-receive", 'hooks/post-receive');
        copy("$home/git_hooks/pre-receive", 'hooks/pre-receive');
        file_put_contents('hooks/nyansapow.conf.php', $config);
        chmod('hooks/post-receive', 0755);
        chmod('hooks/pre-receive', 0755);
        mkdir('nyansapow_site');
    }
    else
    {
        fputs(STDERR, "Please ensure that this is a valid Git repository\n");
    }
    die();
}
else if(isset($options['update-git-hooks']))
{
    @unlink('hooks/post-receive');
    @unlink('hooks/pre-receive');
    copy("$home/git_hooks/post-receive", 'hooks/post-receive');
    chmod('hooks/post-receive', 0755);    
    copy("$home/git_hooks/pre-receive", 'hooks/pre-receive');
    chmod('hooks/pre-receive', 0755);    
    die();
}

try
{
    $nyansapow = Nyansapow::open($options['input'], $options['output'], $options);
    $nyansapow->write();
}
catch(\nyansapow\Exception $e)
{
    fputs(STDERR, wordwrap("{$e->getMessage()}\nTry `{$argv[0]} --help` for more information.\n"));
}

