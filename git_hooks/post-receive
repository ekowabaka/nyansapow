#!/usr/bin/env php
<?php

error_reporting(E_ALL ^ E_NOTICE);

require "nyansapow.conf.php";
require "$nyansapow_home/vendor/autoload.php";

use nyansapow\Nyansapow;

$stdin = fopen("php://stdin", "r");

while(!feof($stdin))
{
    $refs = fgets($stdin);
    // Work only on refs pushed to master
    if(preg_match("/(?<from>[0-9a-f]+) (?<to>[0-9a-f]+) (refs\/heads\/master)/", $refs, $matches))
    {
        if($matches['from'] == '0000000000000000000000000000000000000000')
        {
            echo "Preparing to generate a new site.\n";
            generate_entire_site();
        }
        else 
        {
            echo "Updating site at `$output_directory`\n";
            exec("git rev-list {$matches['from']}..{$matches['to']}", $revisions);
            $modifiedFiles = array();
            
            foreach($revisions as $revision)
            {
                exec("git show --name-only --pretty=\"format:\" $revision", $files);
                $modifiedFiles = array_merge($modifiedFiles, $files);                
            }
            
            //$modifiedFiles = array_unique($modifiedFiles);
            $site = Nyansapow::open('nyansapow_site', $output_directory, array('site-name' => $name));
            
            foreach(array_unique($modifiedFiles) as $file)
            {
                if($file == '') continue;
                
                if($file == 'site.ini')
                {
                    generate_entire_site();
                    break;
                }
                
                if($file == 'assets')
                {
                    $site->writeAssets();
                }
                
                echo "Writing $file ...\n";
                
                $dir = dirname($file);
                if($dir != '' && !is_dir($dir))
                {
                    @mkdir("nyansapow_site/$dir");
                }
                exec ("git show master:{$file} > 'nyansapow_site/$file'");
            }            
            
            $site->write($modifiedFiles);            
        }
    }
}

function generate_entire_site()
{
    require "nyansapow.conf.php";
    echo "Generating entire site at `$output_directory`\n";
    exec("git archive master | tar -x -C nyansapow_site");
    $site = Nyansapow::open('nyansapow_site/', $output_directory, array('site-name' => $name));
    $site->write();    
}
